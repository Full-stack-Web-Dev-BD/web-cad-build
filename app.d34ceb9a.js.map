{"version":3,"sources":["src/constants.js","src/keyboards_events.js","src/history_management.js","src/utils.js","src/components/commands-panel.js","src/components/input-dialogue.js","src/renderFn.js","src/commands/command.js","src/commands/pan.js","src/commands/zoom.js","src/commands/select.js","src/commands/delete.js","src/commands/line.js","src/commands/rect.js","src/commands/circle.js","src/commands/move.js","src/commands/copy.js","src/commands/resize.js","src/commands/text.js","src/commands/measures.js","src/commands/rotate.js","src/app.js"],"names":["APP_VERSION","exports","CANVAS_DIMENSIONS","WIDTH","HEIGHT","SNAP_GRID","UNITS","ONE","TEN","HUNDRED","OPERATIONS","PAN","ZOOM","SELECT","DELETE","MOVE","ROTATE","COPY","RESIZE","LINE","RECT","CIRCLE","ARC","FILL","TEXT","MEASURES","COLORS_CMD_PANEL","COLORS","grey","shapes_fill_temp","shapes_fill_selected","shapes_stroke","shapes_stroke_selected","LINES","CURSOR","CANVAS","LINES_BIG","LINES_SMALL","blue","white","OFFSET","FONT","ANIMATION","TIME","STEP","_constants","require","_typeof","o","Symbol","iterator","constructor","prototype","_classCallCheck","a","n","TypeError","_defineProperties","e","r","t","length","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","i","_toPrimitive","toPrimitive","call","String","Number","KeyboardEvents","default","main","_this","choosenCommand","currentSnap","M","hasSnap","startListenDocumentKeyup","document","body","addEventListener","passed","detail","value","_this2","onkeyup","textModal","isOpen","shapes","forEach","selected","sendCustomEvent","XL","L","S","XS","ctrlKey","HM","undo","redo","zoomLevel","altKey","payload","event","CustomEvent","bubbles","dispatchEvent","HistoryManagement","history","position","get","find","slice","push","_toConsumableArray","console","log","colorsTable","trackSelection","shape","Math","round","random","g","b","concat","colorKey","interpolate","arguments","undefined","x","y","frac","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","join","hexToRGB","h","_utils","CommandsPanel","app","newX","newY","panel","querySelector","header","colors","fillBtn","slider","generateColors","adjustSelection","adjustColorSelection","selectedColorInPanel","onmousedown","dragMouseDown","bind","onclick","click","color","target","keys","li","innerHTML","map","selectColor","evt","c","dataset","items","getElementsByTagName","classList","remove","add","all","querySelectorAll","element","cmd","parentNode","toggle","switchUnitSystem","save","import","window","open","switchTheme","contains","options","index","findIndex","choosenUnitSystem","_this3","selectedTheme","preventDefault","clientX","clientY","onmouseup","closeDragElement","onmousemove","elementDrag","style","top","offsetTop","left","offsetLeft","_this4","input","getElementById","onchange","file","files","reader","FileReader","readAsText","onload","readerEvent","content","result","createDrawingFromImportedFile","JSON","parse","error","output","ver","theme","dataStr","encodeURIComponent","stringify","dlAnchorElem","setAttribute","data","clean","set","InputDialogue","modal","closeBtn","getElementsByClassName","saveBtn","close","display","callback","val","focus","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","_arrayLikeToArray","toString","name","Array","from","test","isArray","renderPointer","scope","ctx","strokeStyle","strokeRect","mouse","netPanningX","netPanningY","lineWidth","setLineDash","beginPath","moveTo","lineTo","stroke","fillStyle","fillText","toUpperCase","getValueAccordingToUnitSystem","info","value1","value2","closePath","renderCanvas","fillRect","font","renderShapes","hit","tempShape","item","text","measure","textLength","measureText","width","rect","start_x","start_y","fill","restore","textAlign","textBaseline","w","translate","angle","rotate","radius","arc","PI","drawLine","dx","end_x","dy","end_y","atan2","sqrt","dashed","arrowStart","arrowEnd","setTransform","Command","_x","_y","mouseup","_command","_interopRequireDefault","__esModule","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","apply","_assertThisInitialized","ReferenceError","Boolean","valueOf","setPrototypeOf","getPrototypeOf","__proto__","_inherits","create","_setPrototypeOf","PanCommand","_Command","state","isMouseDown","startX","startY","panx","pany","max","_this$limitCamera","limitCamera","ZoomCommand","mouseDown","SelectCommand","pixel","gctx","getImageData","every","theOne","updateText","DeleteCommand","found","splice","LineCommand","started","start","floor","final_end_x","final_end_y","animationCreate","counterCreate","RectCommand","height","min","abs","final_w","final_h","CircleCommand","final_radius","MoveCommand","sel","new_start_x","new_start_y","animationEdit","counterEdit","dx1","dy1","dx2","dy2","CopyCommand","ResizeCommand","isResizeDrag","expectResize","selectionHandles","mySelColor","mySelWidth","mySelBoxColor","mySelBoxSize","createBoxes","removeBoxes","half","choosen","anchors","numberOfAnchors","mySel","mx","my","oldx","oldy","dr","cur","canvas","cursor","TextCommand","saveText","dashed_line","MeasuresCommand","first","midX","midY","RotateCommand","_keyboards_events","_history_management","_commandsPanel","_inputDialogue","_renderFn","_pan","_zoom","_select","_delete","_line","_rect","_circle","_move","_copy","_resize","_text","_measures","_rotate","cad","WebCAD","replaceWith","getContext","ghostcanvas","createElement","commands","lastTime","getTime","currentTime","delta","startListening","resizeCanvas","what","innerWidth","innerHeight","draw","oncontextmenu","globalHandler","ev","stopPropagation","parseInt","restoH","restoV","currentCommand","func","type","dt","update","requestAnimationFrame","loop","_interpolate","unselectAll","_interpolate2","_interpolate3","scale"],"mappings":"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","file":"app.d34ceb9a.js","sourceRoot":"..","sourcesContent":["export const APP_VERSION = '0.7.0';\r\n\r\nexport const CANVAS_DIMENSIONS = {\r\n    WIDTH: 4000,\r\n    HEIGHT: 3000\r\n}\r\n\r\n// key : value in pixel\r\n\r\nexport const SNAP_GRID = {\r\n    'XS': 1.67,  // 5 / 3\r\n    'S': 3.33,   // 10 / 3\r\n    'M': 6.67,   // 20 / 3\r\n    'L': 13.33,  // 40 / 3\r\n    'XL': 26.67  // 80 / 3\r\n};\r\n\r\n\r\n\r\n// proportion from different unit measures \r\n// pixels are the base...\r\nexport const UNITS = {\r\n    ONE: 1,         // pixels\r\n    TEN: 10,        // cm\r\n    HUNDRED: 100    // mt\r\n};\r\n\r\nexport const OPERATIONS = {\r\n    // VIEW\r\n    PAN: \"PAN\",\r\n    ZOOM: \"ZOOM\",\r\n    SELECT: \"SELECT\",\r\n    DELETE: \"DELETE\",\r\n    // EDIT\r\n    MOVE: 'MOVE',\r\n    ROTATE: \"ROTATE\",\r\n    COPY: 'COPY',\r\n    RESIZE: \"RESIZE\",\r\n    // SHAPES\r\n    LINE: 'LINE',\r\n    RECT: 'RECT',\r\n    CIRCLE: 'CIRCLE',\r\n    ARC: 'ARC',\r\n    // STYLE\r\n    FILL: 'FILL',\r\n    // UTILS\r\n    TEXT: 'TEXT',\r\n    MEASURES: 'MEASURES'\r\n};\r\n\r\nexport const COLORS_CMD_PANEL = [\r\n    // NAVY\r\n    '#001f3f',\r\n    // Blue\r\n    '#0074D9',\r\n    // AQUA\r\n    '#7FDBFF',\r\n    // TEAL\r\n    '#39CCCC',\r\n    // OLIVE\r\n    '#3D9970',\r\n    // GREEN\r\n    '#2ECC40',\r\n    // LIME\r\n    '#01FF70',\r\n    // YELLOW\r\n    '#FFDC00',\r\n    // ORANGE\r\n    '#FF851B',\r\n    // BROWN\r\n    '#8B4513',\r\n    // RED\r\n    '#FF4136',\r\n    // MAROON\r\n    '#85144b',\r\n    // FUCHSIA\r\n    '#F012BE',\r\n    // PURPLE\r\n    '#B10DC9',\r\n    // BLACK-\r\n    '#111111',\r\n    // GRAY\r\n    '#AAAAAA',\r\n    // SILVER\r\n    '#DDDDDD'\r\n];\r\n\r\nexport const COLORS = {\r\n    grey: {\r\n        shapes_fill_temp: '#E8E9E9',\r\n        shapes_fill_selected: 'rgb(200,0,100,0.25)',\r\n        shapes_stroke: 'white',\r\n        shapes_stroke_selected: 'salmon',\r\n        LINES: 'grey',\r\n        CURSOR: 'orange',\r\n        CANVAS: \"rgb(31,40,49)\",\r\n        LINES_BIG: \"rgb(48,55,71)\",\r\n        LINES_SMALL: \"rgb(36,45,56)\"\r\n    },\r\n    blue: {\r\n        shapes_fill_temp: '#E8E9E9',\r\n        shapes_fill_selected: 'rgba(200,0,100,0.25)',\r\n        shapes_stroke: '#D1D3D4',\r\n        shapes_stroke_selected: 'salmon',\r\n        LINES: 'white',\r\n        CURSOR: '#ad7fa8',\r\n        CANVAS: \"#0f223e\",\r\n        LINES_BIG: \"rgb(48,55,71)\",\r\n        LINES_SMALL: \"rgb(36,45,56)\"\r\n    },\r\n    white: {\r\n        shapes_fill_temp: '#D1D3D4',\r\n        shapes_fill_selected: 'rgba(231,76,60,0.25)',\r\n        shapes_stroke: 'black',\r\n        shapes_stroke_selected: 'salmon',\r\n        LINES: 'black',\r\n        CURSOR: '#2ecc71',\r\n        CANVAS: \"rgb(235,242,250)\",\r\n        LINES_BIG: \"#D1D3D4\",\r\n        LINES_SMALL: \"#E8E9E9\"\r\n    }\r\n}\r\n\r\nexport const TEXT = {\r\n    OFFSET: 5,\r\n    FONT: '13px Arial'\r\n}\r\n\r\nexport const ANIMATION = {\r\n    TIME: 1,\r\n    STEP: .05\r\n}","import { OPERATIONS, SNAP_GRID } from './constants';\r\n\r\n// https://css-tricks.com/snippets/javascript/javascript-keycodes/\r\nexport default class KeyboardEvents {\r\n\r\n    constructor(main) {\r\n\r\n        this.main = main;\r\n        // DEFAULTS\r\n        this.choosenCommand = OPERATIONS.SELECT\r\n        this.currentSnap = SNAP_GRID.M;\r\n        this.hasSnap = true;\r\n\r\n        this.startListenDocumentKeyup()\r\n\r\n        document.body.addEventListener('CMD-PANEL', (passed) => {\r\n            this.choosenCommand = passed.detail;\r\n        }, false);\r\n    }\r\n\r\n    startListenDocumentKeyup() {\r\n        document.onkeyup = (e) => {\r\n\r\n            // track keyboard events only if the text input modal is not open\r\n            if (!this.main.textModal.isOpen) {\r\n\r\n                if (e.key == 'Escape' || e.key == 's') {\r\n                    this.choosenCommand = OPERATIONS.SELECT;\r\n                    this.main.shapes.forEach(e => {\r\n                        e.selected = false;\r\n                    });\r\n                    this.main.selected = null;\r\n                    /* \r\n                } else if (e.key == 'a') {\r\n                    this.choosenCommand = OPERATIONS.ARC;*/\r\n                } else if (e.key == 'w') {\r\n                    this.choosenCommand = OPERATIONS.ROTATE;\r\n                } else if (e.key == 'f') {\r\n                    this.choosenCommand = OPERATIONS.MEASURES;\r\n                } else if (e.key == 'e') {\r\n                    this.choosenCommand = OPERATIONS.RESIZE;\r\n                } else if (e.key == 'c') {\r\n                    this.choosenCommand = OPERATIONS.COPY;\r\n                } else if (e.key == 'm') {\r\n                    this.choosenCommand = OPERATIONS.MOVE;\r\n                } else if (e.key == 'd') {\r\n                    this.choosenCommand = OPERATIONS.DELETE;\r\n                } else if (e.key == 'l') {\r\n                    this.choosenCommand = OPERATIONS.LINE;\r\n                } else if (e.key == 'r') {\r\n                    this.choosenCommand = OPERATIONS.RECT;\r\n                } else if (e.key == 'a') {\r\n                    this.choosenCommand = OPERATIONS.CIRCLE;\r\n                } else if (e.key == 'p') {\r\n                    this.choosenCommand = OPERATIONS.PAN;\r\n                } else if (e.key == 't') {\r\n                    this.choosenCommand = OPERATIONS.TEXT;\r\n                } else if (e.key == 0) {\r\n                    this.hasSnap = false;\r\n                    this.sendCustomEvent('CMD-SNAP', '0');\r\n                } else if (e.key == \"1\") {\r\n                    this.hasSnap = true;\r\n                    this.currentSnap = SNAP_GRID.XL\r\n                    this.sendCustomEvent('CMD-SNAP', '1');\r\n                } else if (e.key == \"2\") {\r\n                    this.hasSnap = true;\r\n                    this.currentSnap = SNAP_GRID.L\r\n                    this.sendCustomEvent('CMD-SNAP', '2');\r\n                } else if (e.key == \"3\") {\r\n                    this.hasSnap = true;\r\n                    this.currentSnap = SNAP_GRID.M\r\n                    this.sendCustomEvent('CMD-SNAP', '3');\r\n                } else if (e.key == \"4\") {\r\n                    this.hasSnap = true;\r\n                    this.currentSnap = SNAP_GRID.S\r\n                    this.sendCustomEvent('CMD-SNAP', '4');\r\n                } else if (e.key == \"5\") {\r\n                    this.hasSnap = true;\r\n                    this.currentSnap = SNAP_GRID.XS\r\n                    this.sendCustomEvent('CMD-SNAP', '5');\r\n                } else if (e.ctrlKey && e.key == 'z') {\r\n                    this.main.HM.undo()\r\n                } else if (e.ctrlKey && e.key == 'y') {\r\n                    this.main.HM.redo()\r\n                } else if (e.ctrlKey && e.key == 'x') {\r\n                    this.main.zoomLevel = 1;\r\n                } else if (e.altKey && e.key == '+') {\r\n                    this.main.zoomLevel += 0.1;\r\n                } else if (e.altKey && e.key == '-') {\r\n                    this.main.zoomLevel -= 0.1;\r\n                } else if (e.key == 'x') {\r\n                    this.choosenCommand = OPERATIONS.ZOOM;\r\n                }\r\n            }\r\n\r\n            this.sendCustomEvent('CMD-KEYS', this.choosenCommand);\r\n\r\n        }\r\n    }\r\n\r\n    sendCustomEvent(key, payload) {\r\n        const event = new CustomEvent(key, { bubbles: true, detail: payload });\r\n        document.body.dispatchEvent(event);\r\n    }\r\n}","export default class HistoryManagement {\r\n\r\n    constructor(main) {\r\n        this.main = main\r\n        this.history = [[]];\r\n        this.position = 0;\r\n    }\r\n\r\n    get value() {\r\n        return this.history[this.position];\r\n    }\r\n\r\n    get selected() {\r\n        return this.history[this.position].find(e => e.selected)[0];\r\n    }\r\n\r\n    set(value) {\r\n        if (this.position < this.history.length - 1) {\r\n            this.history = this.history.slice(0, this.position + 1);\r\n        }\r\n        this.history.push([...value]);\r\n        this.position += 1;\r\n    }\r\n\r\n    undo() {\r\n        if (this.position > 0) {\r\n            this.position--;\r\n            this.main.shapes = [...this.value];\r\n        } else {\r\n            console.log('No more undo ...')\r\n        }\r\n    }\r\n\r\n    redo() {\r\n        if (this.position < this.history.length - 1) {\r\n            this.position++;\r\n            this.main.shapes = [...this.value];\r\n        } else {\r\n            console.log('No more redo ...')\r\n        }\r\n    }\r\n\r\n    clean(){\r\n        this.history = [[]];\r\n        this.position = 0;\r\n    }\r\n\r\n    // toString function to aid in illustrating\r\n    toString() {\r\n        console.log(\"Currnent Value: \", this.value)\r\n        console.log(\"History: \", this.history)\r\n        console.log(\"Position: \", this.position);\r\n    }\r\n}\r\n","export const colorsTable = {}\r\n\r\nexport function trackSelection (shape) {\r\n    const r = Math.round(Math.random() * 255);\r\n    const g = Math.round(Math.random() * 255);\r\n    const b = Math.round(Math.random() * 255);\r\n    let key = `rgb(${r},${g},${b})`;\r\n    shape.colorKey = key;\r\n    if (!(key in colorsTable)) {\r\n        colorsTable[key] = shape\r\n    }\r\n    return shape;\r\n}\r\n\r\nexport function interpolate (a = { x: 0, y: 0 }, b = { x: 0, y: 0 }, frac) {\r\n    var nx = a.x + (b.x - a.x) * frac;\r\n    var ny = a.y + (b.y - a.y) * frac;\r\n    return { x: nx, y: ny };\r\n}\r\n\r\nexport function formatDate (date) {\r\n    var d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2)\r\n        month = '0' + month;\r\n    if (day.length < 2)\r\n        day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n}\r\n\r\n// https://css-tricks.com/converting-color-spaces-in-javascript/\r\nexport function hexToRGB (h) {\r\n    let r = 0, g = 0, b = 0;\r\n\r\n    // 3 digits\r\n    if (h.length == 4) {\r\n        r = \"0x\" + h[1] + h[1];\r\n        g = \"0x\" + h[2] + h[2];\r\n        b = \"0x\" + h[3] + h[3];\r\n\r\n        // 6 digits\r\n    } else if (h.length == 7) {\r\n        r = \"0x\" + h[1] + h[2];\r\n        g = \"0x\" + h[3] + h[4];\r\n        b = \"0x\" + h[5] + h[6];\r\n    }\r\n    return `rgba(${+r},${+g},${+b},.3)`;\r\n}","import { APP_VERSION, COLORS_CMD_PANEL, SNAP_GRID, UNITS } from '../constants';\r\nimport { formatDate } from '../utils';\r\n\r\nexport default class CommandsPanel {\r\n    constructor(app) {\r\n\r\n        this.main = app\r\n        this.x = this.x || 0\r\n        this.y = this.y || 0\r\n        this.newX = this.newX || 0\r\n        this.newY = this.newY || 0\r\n        this.panel = document.querySelector('#panel')\r\n        this.header = document.querySelector('#panel-header')\r\n        this.colors = document.querySelector('.colors');\r\n        this.fillBtn = document.querySelector('.right');\r\n        this.slider = document.querySelector('.slider');\r\n\r\n        this.generateColors();\r\n\r\n        this.choosenCommand = 'SELECT'; // default\r\n        this.adjustSelection();\r\n        this.adjustColorSelection(this.main.selectedColorInPanel)\r\n\r\n        // EVENTS\r\n        this.header.onmousedown = this.dragMouseDown.bind(this);\r\n        this.panel.onclick = this.click.bind(this);\r\n\r\n        // EVENTS from USER KEYBOARDS\r\n        document.body.addEventListener('CMD-KEYS', (passed) => {\r\n            console.log(`Event from keyboard: ${passed.detail}`);\r\n            this.choosenCommand = passed.detail;\r\n            this.adjustSelection()\r\n        }, true);\r\n\r\n        // EVENTS from USER KEYBOARDS for SNAP\r\n        document.body.addEventListener('CMD-SNAP', (passed) => {\r\n            console.log(`Event from keyboard: ${passed.detail}`);\r\n            this.slider.value = passed.detail;\r\n        }, true);\r\n\r\n        // EVENTS from USER SELECTION\r\n        document.body.addEventListener('SELECT-ITEM', (passed) => {\r\n            console.log(`Selected element: ${passed.detail}`);\r\n            if (passed.detail || passed.detail == 0) {\r\n                this.main.selectedColorInPanel = this.main.shapes[passed.detail].color;\r\n                this.adjustColorSelection(this.main.selectedColorInPanel)\r\n            }\r\n        }, true);\r\n\r\n        this.slider.addEventListener('input', (e) => {\r\n            switch (e.target.value) {\r\n                case '0':\r\n                    this.main.keys.hasSnap = false;\r\n                    break;\r\n                case '1':\r\n                    this.main.keys.hasSnap = true;\r\n                    this.main.keys.currentSnap = SNAP_GRID.XL\r\n                    break;\r\n                case '2':\r\n                    this.main.keys.hasSnap = true;\r\n                    this.main.keys.currentSnap = SNAP_GRID.L\r\n                    break;\r\n                case '3':\r\n                    this.main.keys.hasSnap = true;\r\n                    this.main.keys.currentSnap = SNAP_GRID.M\r\n                    break;\r\n                case '4':\r\n                    this.main.keys.hasSnap = true;\r\n                    this.main.keys.currentSnap = SNAP_GRID.S\r\n                    break;\r\n                case '5':\r\n                    this.main.keys.hasSnap = true;\r\n                    this.main.keys.currentSnap = SNAP_GRID.XS\r\n                    break;\r\n                default:\r\n                    this.main.keys.hasSnap = true;\r\n                    this.main.keys.currentSnap = SNAP_GRID.M\r\n                    break;\r\n            }\r\n        }, false);\r\n    }\r\n\r\n    // http://clrs.cc/\r\n    generateColors () {\r\n        let li = COLORS_CMD_PANEL;\r\n        this.colors.innerHTML = '<ul>' + li.map((e) => `<li class=\"color-dot\" data-color=\"${e}\" style=\"background-color:${e}\"></li>`)\r\n            .join('') + '</ul>';\r\n        this.colors.addEventListener('click', this.selectColor.bind(this))\r\n    }\r\n\r\n    selectColor (evt) {\r\n        let c = evt.target.dataset.color;\r\n        this.main.selectedColorInPanel = c;\r\n        this.adjustColorSelection(c);\r\n    }\r\n\r\n    adjustColorSelection (c) {\r\n        let items = this.colors.getElementsByTagName(\"li\");\r\n        for (let i = 0; i < items.length; ++i) {\r\n            items[i].classList.remove('selected-color');\r\n            if (items[i].dataset.color === c) {\r\n                items[i].classList.add('selected-color');\r\n            }\r\n        }\r\n        if (this.main.selected || this.main.selected == 0) {\r\n            this.main.shapes[this.main.selected].color = this.main.selectedColorInPanel;\r\n        }\r\n    }\r\n\r\n    adjustSelection () {\r\n        let all = this.panel.querySelectorAll('.cmd');\r\n        for (let i = 0; i < all.length; i++) {\r\n            const element = all[i];\r\n            if (element.dataset.cmd === this.choosenCommand) {\r\n                element.classList.add('selected');\r\n            } else {\r\n                element.classList.remove('selected')\r\n            }\r\n        }\r\n    }\r\n\r\n    click (e) {\r\n        console.log(`Event from commands panel: ${e.target.dataset.cmd}`);\r\n        this.choosenCommand = e.target.parentNode.dataset.cmd;\r\n        if (this.choosenCommand) {\r\n            if (this.choosenCommand === 'UNDO') {\r\n                this.main.HM.undo();\r\n                return;\r\n            }\r\n            if (this.choosenCommand === 'REDO') {\r\n                this.main.HM.redo();\r\n                return;\r\n            }\r\n            if (this.choosenCommand === 'FILL') {\r\n                this.fillBtn.classList.toggle('hide')\r\n                return;\r\n            }\r\n            if (this.choosenCommand === 'CONFIG') {\r\n                this.switchUnitSystem()\r\n                return;\r\n            }\r\n            if (this.choosenCommand === 'SAVE') {\r\n                this.save();\r\n                return;\r\n            }\r\n            if (this.choosenCommand === 'IMPORT') {\r\n                this.import();\r\n                return;\r\n            }\r\n            if (this.choosenCommand === 'HELP') {\r\n                window.open(\"https://github.com/LorenzoCorbella74/my-web-cad\");\r\n                return;\r\n            }\r\n            if (this.choosenCommand === 'PALETTE') {\r\n                this.switchTheme()\r\n                return;\r\n            }\r\n            if (!e.target.classList.contains('disabled')) {\r\n                const event = new CustomEvent('CMD-PANEL', { bubbles: true, detail: this.choosenCommand });\r\n                this.panel.dispatchEvent(event);\r\n                this.adjustSelection()\r\n            }\r\n        }\r\n    }\r\n\r\n    switchUnitSystem () {\r\n        let options = Object.keys(UNITS);\r\n        let index = options.findIndex(e => e === this.main.choosenUnitSystem);\r\n        if (index < options.length - 1) {\r\n            index++;\r\n        } else {\r\n            index = 0;\r\n        }\r\n        this.main.choosenUnitSystem = options[index];\r\n    }\r\n    switchTheme () {\r\n        let options = ['grey', 'white', 'blue'];\r\n        let index = options.findIndex(e => e === this.main.selectedTheme);\r\n        if (index < options.length - 1) {\r\n            index++;\r\n        } else {\r\n            index = 0;\r\n        }\r\n        this.main.selectedTheme = options[index];\r\n    }\r\n\r\n    dragMouseDown (e) {\r\n        e = e || window.event;\r\n        e.preventDefault();\r\n        // get the mouse cursor position at startup:\r\n        this.newX = e.clientX;\r\n        this.newY = e.clientY;\r\n        this.panel.onmouseup = this.closeDragElement.bind(this);\r\n        // call a function whenever the cursor moves:\r\n        this.panel.onmousemove = this.elementDrag.bind(this);\r\n    }\r\n\r\n    elementDrag (e) {\r\n        e = e || window.event;\r\n        e.preventDefault();\r\n        // calculate the new cursor position:\r\n        this.x = this.newX - e.clientX;\r\n        this.y = this.newY - e.clientY;\r\n        this.newX = e.clientX;\r\n        this.newY = e.clientY;\r\n        // set the element's new position:\r\n        this.panel.style.top = (this.panel.offsetTop - this.y) + \"px\";\r\n        this.panel.style.left = (this.panel.offsetLeft - this.x) + \"px\";\r\n    }\r\n\r\n    closeDragElement () {\r\n        /* stop moving when mouse button is released:*/\r\n        this.panel.onmouseup = null;\r\n        this.panel.onmousemove = null;\r\n    }\r\n\r\n    import () {\r\n        let input = document.getElementById('file-input');\r\n        input.onchange = e => {\r\n            // getting a hold of the file reference\r\n            var file = e.target.files[0];\r\n            // setting up the reader\r\n            var reader = new FileReader();\r\n            reader.readAsText(file, 'UTF-8');\r\n            // here we tell the reader what to do when it's done reading...\r\n            reader.onload = readerEvent => {\r\n                var content = readerEvent.target.result; // this is the content!\r\n                try {\r\n                    this.createDrawingFromImportedFile(JSON.parse(content));\r\n                } catch (error) {\r\n                    console.log('Was not possible to import the file!')\r\n                }\r\n            }\r\n        }\r\n        input.click();\r\n    }\r\n\r\n    save () {\r\n        let output = {\r\n            ver: APP_VERSION,\r\n            date: formatDate(new Date()),\r\n            shapes: this.main.HM.value,\r\n            theme: this.main.selectedTheme\r\n        }\r\n        var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(output));\r\n        var dlAnchorElem = document.getElementById('downloadAnchorElem');\r\n        dlAnchorElem.setAttribute(\"href\", dataStr);\r\n        dlAnchorElem.setAttribute(\"download\", `draw_${formatDate(new Date())}.json`); // ``\r\n        dlAnchorElem.click();\r\n    }\r\n\r\n    createDrawingFromImportedFile (data) {\r\n        this.main.selectedTheme = data.theme;\r\n        this.main.HM.clean();\r\n        this.main.shapes = data.shapes;\r\n        this.main.HM.set(this.main.shapes);\r\n    }\r\n\r\n}","export default class InputDialogue {\r\n\r\n    constructor(app) {\r\n\r\n        this.main = app\r\n        // Get the modal\r\n        this.modal = document.getElementById(\"myModal\");\r\n        this.content = this.modal.querySelector(\".modal-content\")\r\n        this.input = this.modal.querySelector(\".modal-content input\")\r\n        // Get the <span> element that closes the modal\r\n        this.closeBtn = document.getElementsByClassName(\"close\")[0];\r\n        this.saveBtn = document.getElementsByClassName(\"save\")[0];\r\n\r\n        this.closeBtn.addEventListener('click', this.close.bind(this))\r\n        this.saveBtn.addEventListener('click', this.save.bind(this))\r\n\r\n        // When the user clicks anywhere outside of the modal, close it\r\n        window.onclick = function (event) {\r\n            if (event.target == this.modal /* && this.isOpen */) {\r\n                this.close(event)\r\n            }\r\n        }\r\n    }\r\n\r\n    close (e) {\r\n        this.modal.style.display = \"none\";\r\n        this.isOpen = false;\r\n    }\r\n\r\n    save (e) {\r\n        this.close();\r\n        this.callback && this.callback({ x: this.x, y: this.y, val: this.input.value });\r\n        this.input.value = '';\r\n    }\r\n\r\n    open (x, y, value, callback) {\r\n        this.isOpen = true;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.modal.style.display = \"block\";\r\n        this.content.style.position = \"absolute\";\r\n        this.content.style.left = x + 'px';\r\n        this.content.style.top = (y - 26) + 'px';\r\n        this.input.value = value\r\n        this.input.focus()\r\n        this.callback = callback;\r\n    }\r\n}","import { CANVAS_DIMENSIONS, COLORS, TEXT } from './constants';\r\nimport { hexToRGB } from './utils';\r\n\r\nexport function renderPointer (scope) {\r\n    scope.ctx.strokeStyle = COLORS[scope.selectedTheme].CURSOR; // green\r\n    scope.ctx.strokeRect(scope.mouse.x - 5 - scope.netPanningX, scope.mouse.y - 5 - scope.netPanningY, 10, 10);\r\n    scope.ctx.lineWidth = 0.5;\r\n    scope.ctx.setLineDash([scope.keys.currentSnap, scope.keys.currentSnap]);   // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash\r\n    scope.ctx.beginPath();\r\n    scope.ctx.moveTo(scope.mouse.x - scope.netPanningX, 0);\r\n    scope.ctx.lineTo(scope.mouse.x - scope.netPanningX, scope.mouse.y - 5 - scope.netPanningY);\r\n    scope.ctx.moveTo(scope.mouse.x - scope.netPanningX, scope.mouse.y + 5 - scope.netPanningY);\r\n    scope.ctx.lineTo(scope.mouse.x - scope.netPanningX, CANVAS_DIMENSIONS.HEIGHT);\r\n    scope.ctx.moveTo(0, scope.mouse.y - scope.netPanningY);\r\n    scope.ctx.lineTo(scope.mouse.x - 5 - scope.netPanningX, scope.mouse.y - scope.netPanningY);\r\n    scope.ctx.moveTo(scope.mouse.x + 5 - scope.netPanningX, scope.mouse.y - scope.netPanningY);\r\n    scope.ctx.lineTo(CANVAS_DIMENSIONS.WIDTH, scope.mouse.y - scope.netPanningY);\r\n    scope.ctx.stroke();\r\n    scope.ctx.fillStyle = COLORS[scope.selectedTheme].LINES;\r\n    scope.ctx.fillText(`${scope.keys.choosenCommand.toUpperCase()}`, scope.mouse.x + 12.5 - scope.netPanningX, scope.mouse.y - 4.5 - scope.netPanningY)\r\n    scope.ctx.fillText(`x: ${scope.getValueAccordingToUnitSystem(scope.mouse.x - scope.netPanningX)} - y: ${scope.getValueAccordingToUnitSystem(scope.mouse.y - scope.netPanningY)}`, scope.mouse.x + 12.5 - scope.netPanningX, scope.mouse.y + 12.5 - scope.netPanningY)\r\n    scope.ctx.fillText(`${scope.info.key} ${scope.getValueAccordingToUnitSystem(scope.info.value1)} ${scope.getValueAccordingToUnitSystem(scope.info.value2)}`, \r\n    scope.mouse.x + 12.5 - scope.netPanningX, \r\n    scope.mouse.y + 27.5 - scope.netPanningY)\r\n    scope.ctx.closePath();\r\n    scope.ctx.setLineDash([]);\r\n}\r\n\r\nexport function renderCanvas (scope) {\r\n    scope.ctx.fillStyle = COLORS[scope.selectedTheme].CANVAS;\r\n    scope.ctx.fillRect(0, 0, CANVAS_DIMENSIONS.WIDTH, CANVAS_DIMENSIONS.HEIGHT);\r\n    // colonne\r\n    for (let i = 0; i < CANVAS_DIMENSIONS.WIDTH; i += scope.keys.currentSnap) {\r\n        if (scope.keys.hasSnap) {\r\n            scope.ctx.beginPath();\r\n            scope.ctx.moveTo(i + 0.5, 0);\r\n            scope.ctx.lineTo(i + 0.5, CANVAS_DIMENSIONS.HEIGHT);\r\n            if (i % 100 === 0) {\r\n                scope.ctx.strokeStyle = COLORS[scope.selectedTheme].LINES_BIG;\r\n            } else {\r\n                scope.ctx.strokeStyle = COLORS[scope.selectedTheme].LINES_SMALL;\r\n            }\r\n            scope.ctx.lineWidth = 0.5;\r\n            scope.ctx.closePath()\r\n            scope.ctx.stroke();\r\n        }\r\n        if (i % 100 === 0) {\r\n            scope.ctx.font = TEXT.FONT;\r\n            scope.ctx.fillStyle = COLORS[scope.selectedTheme].LINES;\r\n            // scope.ctx.textAlign = \"center\";\r\n            scope.ctx.fillText(\r\n                scope.getValueAccordingToUnitSystem(i).toString(),\r\n                i + 2.5, 10 - (scope.netPanningY > 0 ? 0 : scope.netPanningY));\r\n        }\r\n    }\r\n    // righe\r\n    for (let i = 0; i < CANVAS_DIMENSIONS.HEIGHT; i += scope.keys.currentSnap) {\r\n        if (scope.keys.hasSnap) {\r\n            scope.ctx.beginPath();\r\n            scope.ctx.moveTo(0, i + 0.5);\r\n            scope.ctx.lineTo(CANVAS_DIMENSIONS.WIDTH, i + 0.5);\r\n            if (i % 100 === 0) {\r\n                scope.ctx.strokeStyle = COLORS[scope.selectedTheme].LINES_BIG;\r\n            } else {\r\n                scope.ctx.strokeStyle = COLORS[scope.selectedTheme].LINES_SMALL;\r\n            }\r\n            scope.ctx.lineWidth = 0.5;\r\n            scope.ctx.closePath()\r\n            scope.ctx.stroke();\r\n        }\r\n        if (i % 100 === 0) {\r\n            scope.ctx.font = TEXT.FONT;\r\n            scope.ctx.fillStyle = COLORS[scope.selectedTheme].LINES;\r\n            // scope.ctx.textAlign = \"center\";\r\n            scope.ctx.fillText(\r\n                scope.getValueAccordingToUnitSystem(i).toString(),\r\n                2.5 - (scope.netPanningX > 0 ? 0 : scope.netPanningX), i - 2.5);\r\n        }\r\n    }\r\n}\r\n\r\nexport function renderShapes (scope, ctx, hit) {\r\n    [...scope.HM.value, ...scope.tempShape].forEach(item => {\r\n        if (hit) {\r\n            ctx.lineWidth = 10 // to select lines or sides of rect...\r\n        } else {\r\n            ctx.lineWidth = 0.5\r\n        }\r\n        if (item.text || item.measure) {\r\n            if (hit) {\r\n                ctx.save()\r\n                ctx.fillStyle = item.colorKey\r\n                ctx.beginPath()\r\n                let textLength = ctx.measureText(item.text).width;\r\n                // console.log(textLength, 9 * item.text.length) /* 9px for each char */\r\n                ctx.rect(item.start_x - textLength / 2, item.start_y - 13, textLength, 20)\r\n                ctx.fill()\r\n                ctx.stroke()\r\n                ctx.restore()\r\n            } else {\r\n                ctx.save()\r\n                ctx.fillStyle = item.selected ? COLORS[scope.selectedTheme].shapes_fill_selected : (hit ? item.colorKey : item.color)\r\n                ctx.beginPath()\r\n                ctx.font = item.font;\r\n                ctx.textAlign = 'center';\r\n                ctx.textBaseline = 'middle';\r\n                if (item.text) {\r\n                    ctx.fillText(item.text, item.start_x, item.start_y);\r\n                } else if (item.measure) {\r\n                    ctx.fillText(\r\n                        scope.getValueAccordingToUnitSystem(item.measure).toString(),\r\n                        item.start_x,\r\n                        item.start_y\r\n                    );\r\n                }\r\n                ctx.restore()\r\n            }\r\n        } else if (item.w && item.h) {\r\n            ctx.save()\r\n            ctx.fillStyle = item.selected ? COLORS[scope.selectedTheme].shapes_fill_selected : (hit ? item.colorKey : hexToRGB(item.color))\r\n            ctx.strokeStyle = item.selected ? COLORS[scope.selectedTheme].shapes_stroke_selected : (hit ? item.colorKey : item.stroke)\r\n            ctx.beginPath()\r\n            ctx.translate(item.start_x + item.w / 2, item.start_y + item.h / 2);\r\n            if (item.angle) {\r\n                ctx.rotate(item.angle);\r\n            }\r\n            ctx.rect(-item.w / 2, -item.h / 2, item.w, item.h)\r\n            ctx.fill()\r\n            ctx.stroke()\r\n            ctx.restore()\r\n        } else if (item.radius) {\r\n            ctx.save()\r\n            ctx.strokeStyle = item.selected ? COLORS[scope.selectedTheme].shapes_stroke_selected : (hit ? item.colorKey : item.stroke)\r\n            ctx.fillStyle = item.selected ? COLORS[scope.selectedTheme].shapes_fill_selected : (hit ? item.colorKey : hexToRGB(item.color))\r\n            ctx.beginPath()\r\n            // x, y, radius, startAngle, endAngle, antiClockwise = false by default\r\n            ctx.arc(item.start_x, item.start_y, item.radius, 0, 2 * Math.PI, false) // full circle\r\n            ctx.fill()\r\n            ctx.stroke()\r\n            ctx.restore()\r\n        } else {\r\n            drawLine(scope, ctx, item, hit);\r\n        }\r\n    });\r\n\r\n}\r\n\r\nfunction drawLine (scope, ctx, item, hit) {\r\n    let aWidth = 5, aLength = 8;\r\n    ctx.setLineDash([0, 0]);\r\n    let dx = item.end_x - item.start_x;\r\n    let dy = item.end_y - item.start_y;\r\n    let angle = Math.atan2(dy, dx);\r\n    let length = Math.sqrt(dx * dx + dy * dy);\r\n\r\n    ctx.strokeStyle = item.selected ? COLORS[scope.selectedTheme].shapes_stroke_selected : (hit ? item.colorKey : item.stroke);\r\n    ctx.translate(item.start_x, item.start_y);\r\n    ctx.rotate(angle);\r\n    ctx.beginPath();\r\n    if (item.dashed) {\r\n        ctx.setLineDash([3.5, 10]);\r\n    }\r\n    ctx.moveTo(0, 0);\r\n    ctx.lineTo(length, 0);\r\n    if (!hit && item.arrowStart) {\r\n        ctx.moveTo(aLength, -aWidth);\r\n        ctx.lineTo(0, 0);\r\n        ctx.lineTo(aLength, aWidth);\r\n    }\r\n    if (!hit && item.arrowEnd) {\r\n        ctx.moveTo(length - aLength, -aWidth);\r\n        ctx.lineTo(length, 0);\r\n        ctx.lineTo(length - aLength, aWidth);\r\n    }\r\n    ctx.stroke();\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n}","export default class Command {\r\n\r\n    constructor(main) {\r\n        // ref to main class istance\r\n        this.main = main;\r\n    }\r\n\r\n    mousemove(e) {\r\n        this.main.mouse.x = e._x;\r\n        this.main.mouse.y = e._y;\r\n        this.main.mouse.event = e;\r\n    }\r\n\r\n    mousedown(e) {\r\n        // console.log('Command: mousedown', e, this)\r\n    }\r\n\r\n    mouseup(event) {\r\n        // console.log('Command: mouseup', event, this)\r\n    }\r\n\r\n    mouseout(event) {\r\n        this.mouseup(event)\r\n    }\r\n\r\n    click(event) {\r\n        // console.log('Command: click', event, this)\r\n    }\r\n\r\n}","import Command from './command';\r\n\r\nimport { CANVAS_DIMENSIONS } from '../constants'\r\n\r\nexport default class PanCommand extends Command {\r\n\r\n    constructor(state) {\r\n        super(state)\r\n\r\n        // this.mouse drag related variables\r\n        this.isMouseDown = false;\r\n        this.startX, this.startY;\r\n        // the accumulated horizontal(X) & vertical(Y) panning the user has done in total\r\n        this.main.netPanningX = 0;\r\n        this.main.netPanningY = 0;\r\n    }\r\n\r\n    limitCamera(panx, pany) {\r\n        let a, b;\r\n        if (panx < 0) {\r\n            a = Math.max(-CANVAS_DIMENSIONS.WIDTH, panx)\r\n        } else {\r\n            a = 0\r\n        }\r\n        if (pany < 0) {\r\n            b = Math.max(-CANVAS_DIMENSIONS.HEIGHT, pany)\r\n        } else {\r\n            b = 0\r\n        }\r\n        return { a, b }\r\n    }\r\n\r\n    mousemove(e) {\r\n        let x = e._x;\r\n        let y = e._y;\r\n\r\n        // if the this.mouse is being dragged\r\n        if (this.isMouseDown) {\r\n            // dx & dy are the distance the this.mouse has moved since the last this.mousemove event\r\n            var dx = x - this.startX;\r\n            var dy = y - this.startY;\r\n\r\n            // reset the vars for next this.mousemove\r\n            this.startX = x;\r\n            this.startY = y;\r\n\r\n            // accumulate the net panning done\r\n            this.main.netPanningX += dx;\r\n            this.main.netPanningY += dy;\r\n\r\n            let { a, b } = this.limitCamera(this.main.netPanningX, this.main.netPanningY)\r\n            this.main.netPanningX = a;\r\n            this.main.netPanningY = b;\r\n            // console.clear()\r\n            // console.log(`Net change in panning: x:${this.main.netPanningX}px, y:${this.main.netPanningY}px`);\r\n        }\r\n        this.main.mouse.x = e._x;\r\n        this.main.mouse.y = e._y;\r\n        this.main.mouse.event = e;\r\n    }\r\n\r\n    mousedown(e) {\r\n        // calc the starting this.mouse X,Y for the drag\r\n        this.startX = e._x;\r\n        this.startY = e._y;\r\n        // set the isDragging flag\r\n        this.isMouseDown = true;\r\n    }\r\n\r\n    mouseup(e) {\r\n        // clear the isDragging flag\r\n        this.isMouseDown = false;\r\n    }\r\n\r\n}","import Command from './command';\r\n\r\nexport default class ZoomCommand extends Command {\r\n\r\n    constructor(state) {\r\n        super(state)\r\n        this.mouseDown = false;\r\n    }\r\n\r\n    mousemove(e) {\r\n        // console.log('Zoom: mousemove', e, this)\r\n        this.main.mouse.x = e._x;\r\n        this.main.mouse.y = e._y;\r\n        this.main.mouse.event = e;\r\n\r\n        if (this.mouseDown) {\r\n            if (!e.ctrlKey) {\r\n                this.main.zoomLevel += .005;\r\n            } else {\r\n                this.main.zoomLevel -= .005;\r\n            }\r\n        }\r\n    }\r\n\r\n    mousedown(e) {\r\n        // console.log('Zoom: mousedown', e, this)\r\n        this.mouseDown = true\r\n\r\n    }\r\n\r\n    mouseup(event) {\r\n        // console.log('Zoom: mouseup', event, this)\r\n        this.mouseDown = false;\r\n    }\r\n\r\n}","import Command from './command';\r\nimport { COLORS, TEXT } from '../constants';\r\nimport { trackSelection } from '../utils'\r\n\r\nexport default class SelectCommand extends Command {\r\n\r\n    constructor(state) {\r\n        super(state)\r\n    }\r\n\r\n    click(e) {\r\n        // get pixel under cursor\r\n        const pixel = this.main.gctx.getImageData(e._x * this.main.zoomLevel, e._y * this.main.zoomLevel, 1, 1).data;\r\n        // create rgb color for that pixel\r\n        const color = `rgb(${pixel[0]},${pixel[1]},${pixel[2]})`;\r\n        // find a shape with the same colour\r\n\r\n        this.main.shapes.forEach((item, index) => {\r\n            if (item.colorKey === color) {\r\n                item.selected = true;\r\n                this.main.selected = index;\r\n                const event = new CustomEvent('SELECT-ITEM', { bubbles: true, detail: this.main.selected });\r\n                document.body.dispatchEvent(event);\r\n            } else {\r\n                item.selected = false;\r\n            }\r\n        });\r\n        if (this.main.shapes.every(e => e.selected === false)) {\r\n            this.main.selected = null;\r\n        }\r\n\r\n        // if it's a text open the dialogue\r\n        if (this.main.shapes[this.main.selected] && this.main.shapes[this.main.selected].text) {\r\n            let theOne = this.main.shapes[this.main.selected]\r\n            this.main.textModal.open(\r\n                theOne.start_x - this.main.netPanningX,\r\n                theOne.start_y - this.main.netPanningY,\r\n                theOne.text,\r\n                (val) => this.updateText(val))\r\n        }\r\n\r\n    }\r\n\r\n    updateText(info) {\r\n        let { val } = info;\r\n        this.main.shapes[this.main.selected].text = val;\r\n        this.main.HM.set(this.main.shapes)\r\n    }\r\n\r\n}","import Command from './command';\r\n\r\nexport default class DeleteCommand extends Command {\r\n\r\n    constructor(state) {\r\n        super(state)\r\n    }\r\n\r\n    click (e) {\r\n        const pixel = this.main.gctx.getImageData(e._x * this.main.zoomLevel, e._y * this.main.zoomLevel, 1, 1).data;\r\n        // create rgb color for that pixel\r\n        const color = `rgb(${pixel[0]},${pixel[1]},${pixel[2]})`;\r\n        // remove the shape with the same colour\r\n        let found = 0\r\n        for (var i = this.main.shapes.length - 1; i >= 0; i--) {\r\n            if (this.main.shapes[i].colorKey === color) {\r\n                this.main.shapes.splice(i, 1);\r\n                found++;\r\n            }\r\n        }\r\n        if (found) {\r\n            this.main.HM.set(this.main.shapes);\r\n        }\r\n    }\r\n\r\n}","import Command from './command';\r\n\r\nimport { COLORS } from '../constants';\r\nimport { trackSelection } from '../utils'\r\n\r\nexport default class LineCommand extends Command {\r\n\r\n    constructor(state) {\r\n        super(state)\r\n        this.started = false;\r\n        this.start = {}\r\n    }\r\n\r\n    mousemove (event) {\r\n        this.main.mouse.x = event._x;\r\n        this.main.mouse.y = event._y;\r\n        this.main.mouse.event = event;\r\n\r\n        if (this.started) {\r\n            this.main.tempShape = [{\r\n                start_x: this.start.x,\r\n                start_y: this.start.y,\r\n                end_x: event._x - this.main.netPanningX,\r\n                end_y: event._y - this.main.netPanningY,\r\n                stroke: COLORS[this.main.selectedTheme].LINES\r\n            }]\r\n\r\n            let dx = this.start.x - (event._x - this.main.netPanningX);\r\n            let dy = this.start.y - (event._y - this.main.netPanningY);\r\n            this.main.info = {\r\n                key: 'Dist: ',\r\n                value1: Math.floor(Math.sqrt(dx * dx + dy * dy))\r\n            };\r\n        }\r\n    }\r\n\r\n    mousedown (event) {\r\n        this.start.x = event._x - this.main.netPanningX;\r\n        this.start.y = event._y - this.main.netPanningY;\r\n        this.started = true;\r\n    }\r\n\r\n    mouseup (event) {\r\n        if (this.started) {\r\n            this.started = false;\r\n            this.main.tempShape.length = 0;\r\n            this.main.shapes.push(trackSelection({\r\n                start_x: this.start.x,\r\n                start_y: this.start.y,\r\n                end_x: this.start.x,\r\n                end_y: this.start.y,\r\n                final_end_x: event._x - this.main.netPanningX,\r\n                final_end_y: event._y - this.main.netPanningY,\r\n                animationCreate: true,\r\n                counterCreate: 0,\r\n                stroke: COLORS[this.main.selectedTheme].shapes_stroke\r\n            }));\r\n            this.main.HM.set(this.main.shapes)\r\n            this.main.info = {\r\n                key: '',\r\n                value1: '',\r\n                value2: ''\r\n            };\r\n        }\r\n    }\r\n\r\n}","import Command from './command';\r\n\r\nimport { COLORS } from '../constants';\r\nimport { trackSelection } from '../utils'\r\n\r\nexport default class RectCommand extends Command {\r\n\r\n    constructor(state) {\r\n        super(state)\r\n        this.started = false;\r\n        this.start = {}\r\n        this.x, this.y\r\n        this.width, this.height\r\n    }\r\n\r\n    mousemove(event) {\r\n        this.main.mouse.x = event._x;\r\n        this.main.mouse.y = event._y;\r\n        this.main.mouse.event = event;\r\n\r\n        if (this.started) {\r\n            this.x = Math.min(event._x, this.start.x),\r\n                this.y = Math.min(event._y, this.start.y),\r\n                this.w = Math.abs(event._x - this.start.x),\r\n                this.h = Math.abs(event._y - this.start.y);\r\n            if (!this.w || !this.h) {\r\n                return;\r\n            }\r\n            this.main.tempShape = [{\r\n                start_x: this.x - this.main.netPanningX,\r\n                start_y: this.y - this.main.netPanningY,\r\n                w: this.w,\r\n                h: this.h,\r\n                color: COLORS[this.main.selectedTheme].shapes_fill_temp,\r\n            }]\r\n            this.main.info = `W: ${this.w}, H: ${this.h}`;\r\n            this.main.info = {\r\n                key: 'W x H: ',\r\n                value1: this.w,\r\n                value2: this.h\r\n            };\r\n        }\r\n\r\n    }\r\n\r\n    mousedown(event) {\r\n        this.start.x = event._x;\r\n        this.start.y = event._y;\r\n        this.started = true;\r\n    }\r\n\r\n    mouseup(event) {\r\n        if (this.started) {\r\n            this.started = false;\r\n            this.main.tempShape.length = 0;\r\n            this.main.shapes.push(trackSelection({\r\n                start_x: this.x - this.main.netPanningX,\r\n                start_y: this.y - this.main.netPanningY,\r\n                final_w: this.w,\r\n                final_h: this.h,\r\n                w: 0,\r\n                h: 0,\r\n                angle: 0,\r\n                animationCreate: true,\r\n                counterCreate: 0,\r\n                color: this.main.selectedColorInPanel,\r\n                stroke: COLORS[this.main.selectedTheme].shapes_stroke\r\n            }));\r\n            this.main.HM.set(this.main.shapes)\r\n            this.main.info = {\r\n                key: '',\r\n                value1: '',\r\n                value2: ''\r\n            };\r\n        }\r\n    }\r\n\r\n}","import Command from './command';\r\n\r\nimport { COLORS } from '../constants';\r\nimport { trackSelection } from '../utils'\r\n\r\nexport default class CircleCommand extends Command {\r\n\r\n    constructor(state) {\r\n        super(state)\r\n        this.started = false;\r\n        this.start = {}\r\n        this.radius = 0\r\n    }\r\n\r\n    mousemove (event) {\r\n        this.main.mouse.x = event._x;\r\n        this.main.mouse.y = event._y;\r\n        this.main.mouse.event = event;\r\n\r\n        if (this.started) {\r\n            let dx = this.start.x - (event._x - this.main.netPanningX);\r\n            let dy = this.start.y - (event._y - this.main.netPanningY);\r\n            this.radius = Math.sqrt(dx * dx + dy * dy);\r\n            this.main.tempShape = [{\r\n                start_x: this.start.x,\r\n                start_y: this.start.y,\r\n                radius: this.radius,\r\n                color: COLORS[this.main.selectedTheme].shapes_fill_temp,\r\n            }];\r\n            this.main.info = {\r\n                key: 'Radius: ',\r\n                value1: Math.floor(this.radius),\r\n                value2: ''\r\n            };\r\n        }\r\n    }\r\n\r\n    mousedown (event) {\r\n        this.start.x = event._x - this.main.netPanningX;\r\n        this.start.y = event._y - this.main.netPanningY;\r\n        this.started = true;\r\n    }\r\n\r\n    mouseup (event) {\r\n        if (this.started) {\r\n            this.started = false;\r\n            this.main.tempShape.length = 0;\r\n            this.main.shapes.push(trackSelection({\r\n                start_x: this.start.x,\r\n                start_y: this.start.y,\r\n                radius: 0,\r\n                final_radius: this.radius,\r\n                animationCreate: true,\r\n                counterCreate: 0,\r\n                color: this.main.selectedColorInPanel,\r\n                stroke: COLORS[this.main.selectedTheme].shapes_stroke\r\n            }));\r\n            this.main.HM.set(this.main.shapes)\r\n            this.radius = 0;\r\n            this.main.info = {\r\n                key: '',\r\n                value1: '',\r\n                value2: ''\r\n            };\r\n        }\r\n    }\r\n}","import { COLORS } from \"../constants\";\r\nimport Command from \"./command\";\r\n\r\nexport default class MoveCommand extends Command {\r\n\r\n    constructor(state) {\r\n        super(state)\r\n        this.started = false;\r\n        this.start = {}\r\n    }\r\n\r\n    mousemove(event) {\r\n        this.main.mouse.x = event._x;\r\n        this.main.mouse.y = event._y;\r\n        this.main.mouse.event = event;\r\n\r\n        // draw a line when dragging\r\n        if (this.started && (this.main.selected || this.main.selected === 0)) {\r\n            this.main.tempShape = [{\r\n                start_x: this.start.x,\r\n                start_y: this.start.y,\r\n                dashed: true,\r\n                end_x: event._x - this.main.netPanningX,\r\n                end_y: event._y - this.main.netPanningY,\r\n                stroke: COLORS[this.main.selectedTheme].LINES\r\n            }]\r\n        }\r\n    }\r\n\r\n    mousedown(event) {// get pixel under cursor\r\n        const pixel = this.main.gctx.getImageData(event._x * this.main.zoomLevel, event._y * this.main.zoomLevel, 1, 1).data;\r\n        // create rgb color for that pixel\r\n        const color = `rgb(${pixel[0]},${pixel[1]},${pixel[2]})`;\r\n        // find a shape with the same colour\r\n\r\n        this.main.shapes.forEach((item, index) => {\r\n            if (item.colorKey === color) {\r\n                item.selected = true;\r\n                this.main.selected = index;\r\n            } else {\r\n                item.selected = false;\r\n            }\r\n        });\r\n        if (this.main.shapes.every(e => e.selected === false)) {\r\n            this.main.selected = null;\r\n        } else {\r\n            this.started = true;\r\n            this.start.x = event._x - this.main.netPanningX;\r\n            this.start.y = event._y - this.main.netPanningY;\r\n        }\r\n    }\r\n\r\n    mouseup(event) {\r\n        if (this.started && (this.main.selected || this.main.selected === 0)) {\r\n            this.started = false;\r\n            this.main.tempShape.length = 0;\r\n            let sel = this.main.shapes[this.main.selected];\r\n            // rect & circle\r\n            if (sel.w || sel.radius) {\r\n                let dx = this.start.x - sel.start_x;\r\n                let dy = this.start.y - sel.start_y;\r\n                sel.new_start_x = (event._x - this.main.netPanningX) - dx;\r\n                sel.new_start_y = (event._y - this.main.netPanningY) - dy;\r\n                sel.start_x = this.start.x - dx;\r\n                sel.start_y = this.start.y - dy;\r\n                sel.animationEdit = true;\r\n                sel.counterEdit = 0;\r\n                this.main.HM.set(this.main.shapes)\r\n            } else {\r\n                // lines\r\n                let dx1 = this.start.x - sel.start_x;\r\n                let dy1 = this.start.y - sel.start_y;\r\n                let dx2 = this.start.x - sel.end_x;\r\n                let dy2 = this.start.y - sel.end_y;\r\n                sel.start_x = (event._x - this.main.netPanningX) - dx1;\r\n                sel.start_y = (event._y - this.main.netPanningY) - dy1;\r\n                sel.end_x = (event._x - this.main.netPanningX) - dx2;\r\n                sel.end_y = (event._y - this.main.netPanningY) - dy2;\r\n                this.main.HM.set(this.main.shapes)\r\n            }\r\n        }\r\n    }\r\n\r\n}","import { COLORS } from \"../constants\";\r\nimport Command from \"./command\";\r\n\r\nimport { trackSelection } from '../utils'\r\n\r\nexport default class CopyCommand extends Command {\r\n\r\n    constructor(state) {\r\n        super(state)\r\n        this.started = false;\r\n        this.start = {}\r\n    }\r\n\r\n    mousemove(event) {\r\n        this.main.mouse.x = event._x;\r\n        this.main.mouse.y = event._y;\r\n        this.main.mouse.event = event;\r\n\r\n        // draw a line when dragging\r\n        if (this.started && (this.main.selected || this.main.selected === 0)) {\r\n            this.main.tempShape = [{\r\n                start_x: this.start.x,\r\n                start_y: this.start.y,\r\n                dashed: true,\r\n                end_x: event._x - this.main.netPanningX,\r\n                end_y: event._y - this.main.netPanningY,\r\n                stroke: COLORS[this.main.selectedTheme].LINES\r\n            }]\r\n        }\r\n    }\r\n\r\n    mousedown(event) {\r\n        const pixel = this.main.gctx.getImageData(event._x * this.main.zoomLevel, event._y * this.main.zoomLevel, 1, 1).data;\r\n        // create rgb color for that pixel\r\n        const color = `rgb(${pixel[0]},${pixel[1]},${pixel[2]})`;\r\n        // find a shape with the same colour\r\n\r\n        this.main.shapes.forEach((item, index) => {\r\n            if (item.colorKey === color) {\r\n                item.selected = true;\r\n                this.main.selected = index;\r\n            } else {\r\n                item.selected = false;\r\n            }\r\n        });\r\n        if (this.main.shapes.every(e => e.selected === false)) {\r\n            this.main.selected = null;\r\n        } else {\r\n            this.started = true;\r\n            this.start.x = event._x - this.main.netPanningX;\r\n            this.start.y = event._y - this.main.netPanningY;\r\n        }\r\n    }\r\n\r\n    mouseup(event) {\r\n        if (this.started && (this.main.selected || this.main.selected === 0)) {\r\n            this.started = false;\r\n            this.main.tempShape.length = 0;\r\n            let sel = this.main.shapes[this.main.selected];\r\n            // rect & circle\r\n            if (sel.w) {\r\n                let dx = this.start.x - sel.start_x;\r\n                let dy = this.start.y - sel.start_y;\r\n                this.main.shapes.push(trackSelection({\r\n                    start_x: this.start.x - dx,\r\n                    start_y: this.start.y - dy,\r\n                    new_start_x: (event._x - this.main.netPanningX) - dx,\r\n                    new_start_y: (event._y - this.main.netPanningY) - dy,\r\n                    w: sel.w,\r\n                    h: sel.h,\r\n                    animationEdit: true,\r\n                    counterEdit: 0,\r\n                    color: this.main.selectedColorInPanel,\r\n                    stroke: COLORS[this.main.selectedTheme].shapes_stroke\r\n                }));\r\n                this.main.HM.set(this.main.shapes)\r\n            } else if (sel.radius) {\r\n                let dx = this.start.x - sel.start_x;\r\n                let dy = this.start.y - sel.start_y;\r\n                this.main.shapes.push(trackSelection({\r\n                    start_x: this.start.x - dx,\r\n                    start_y: this.start.y - dy,\r\n                    new_start_x: (event._x - this.main.netPanningX) - dx,\r\n                    new_start_y: (event._y - this.main.netPanningY) - dy,\r\n                    radius: sel.radius,\r\n                    animationEdit: true,\r\n                    counterEdit: 0,\r\n                    color: this.main.selectedColorInPanel,\r\n                    stroke: COLORS[this.main.selectedTheme].shapes_stroke\r\n                }));\r\n                this.main.HM.set(this.main.shapes)\r\n            } else {\r\n                // lines\r\n                let dx1 = this.start.x - sel.start_x;\r\n                let dy1 = this.start.y - sel.start_y;\r\n                let dx2 = this.start.x - sel.end_x;\r\n                let dy2 = this.start.y - sel.end_y;\r\n                this.main.shapes.push(trackSelection({\r\n                    start_x: (event._x - this.main.netPanningX) - dx1,\r\n                    start_y: (event._y - this.main.netPanningY) - dy1,\r\n                    end_x: (event._x - this.main.netPanningX) - dx2,\r\n                    end_y: (event._y - this.main.netPanningY) - dy2,\r\n                    stroke: COLORS[this.main.selectedTheme].shapes_stroke\r\n                }));\r\n                this.main.HM.set(this.main.shapes);\r\n            }\r\n        }\r\n    }\r\n\r\n}","import Command from './command';\r\n\r\nimport { COLORS } from '../constants';\r\n\r\nexport default class ResizeCommand extends Command {\r\n\r\n    constructor(state) {\r\n        super(state)\r\n\r\n        this.isResizeDrag = false;\r\n        this.expectResize = -1;\r\n        this.selectionHandles = [{}, {}, {}, {}, {}, {}, {}, {}];\r\n\r\n        this.mySelColor = '#CC0000';\r\n        this.mySelWidth = 10;\r\n        this.mySelBoxColor = 'darkred'; // New for selection boxes\r\n        this.mySelBoxSize = 10;\r\n    }\r\n\r\n    click(e) {\r\n        // get pixel under cursor\r\n        const pixel = this.main.gctx.getImageData(e._x * this.main.zoomLevel, e._y * this.main.zoomLevel, 1, 1).data;\r\n        // create rgb color for that pixel\r\n        const color = `rgb(${pixel[0]},${pixel[1]},${pixel[2]})`;\r\n        // find a shape with the same colour\r\n\r\n        this.main.shapes.forEach((item, index) => {\r\n            if (item.colorKey === color) {\r\n                item.selected = true;\r\n                this.main.selected = index;\r\n            } else {\r\n                item.selected = false;\r\n            }\r\n        });\r\n        if (this.main.shapes.every(e => e.selected === false)) {\r\n            this.main.selected = null;\r\n        }\r\n\r\n        // if there is a selected and is a rectangle\r\n        if ((this.main.selected || this.main.selected === 0) /* && this.main.shapes[this.main.selected].w */) {\r\n            this.createBoxes();\r\n        } else {\r\n            this.removeBoxes();\r\n        }\r\n    }\r\n\r\n    removeBoxes() {\r\n        this.main.tempShape.length = 0;\r\n        this.selectionHandles = [{}, {}, {}, {}, {}, {}, {}, {}];\r\n    }\r\n\r\n    createBoxes() {\r\n        let half = this.mySelBoxSize / 2;\r\n        let choosen = this.main.shapes[this.main.selected]\r\n\r\n        // 0  1  2\r\n        // 3     4\r\n        // 5  6  7\r\n\r\n        if (choosen.w && choosen.h) {\r\n            // top left, middle, right\r\n            this.selectionHandles[0].x = choosen.start_x - half;\r\n            this.selectionHandles[0].y = choosen.start_y - half;\r\n\r\n            this.selectionHandles[1].x = choosen.start_x + choosen.w / 2 - half;\r\n            this.selectionHandles[1].y = choosen.start_y - half;\r\n\r\n            this.selectionHandles[2].x = choosen.start_x + choosen.w - half;\r\n            this.selectionHandles[2].y = choosen.start_y - half;\r\n\r\n            //middle left\r\n            this.selectionHandles[3].x = choosen.start_x - half;\r\n            this.selectionHandles[3].y = choosen.start_y + choosen.h / 2 - half;\r\n\r\n            //middle right\r\n            this.selectionHandles[4].x = choosen.start_x + choosen.w - half;\r\n            this.selectionHandles[4].y = choosen.start_y + choosen.h / 2 - half;\r\n\r\n            //bottom left, middle, right\r\n            this.selectionHandles[6].x = choosen.start_x + choosen.w / 2 - half;\r\n            this.selectionHandles[6].y = choosen.start_y + choosen.h - half;\r\n\r\n            this.selectionHandles[5].x = choosen.start_x - half;\r\n            this.selectionHandles[5].y = choosen.start_y + choosen.h - half;\r\n\r\n            this.selectionHandles[7].x = choosen.start_x + choosen.w - half;\r\n            this.selectionHandles[7].y = choosen.start_y + choosen.h - half;\r\n        } else if (choosen.radius) {\r\n            // top left, middle, right\r\n            this.selectionHandles[0].x = choosen.start_x - choosen.radius - half;\r\n            this.selectionHandles[0].y = choosen.start_y - choosen.radius - half;\r\n\r\n            this.selectionHandles[1].x = choosen.start_x - half;\r\n            this.selectionHandles[1].y = choosen.start_y - choosen.radius - half;\r\n\r\n            this.selectionHandles[2].x = choosen.start_x + choosen.radius - half;\r\n            this.selectionHandles[2].y = choosen.start_y - choosen.radius - half;\r\n\r\n            //middle left\r\n            this.selectionHandles[3].x = choosen.start_x - choosen.radius - half;\r\n            this.selectionHandles[3].y = choosen.start_y - half;\r\n\r\n            //middle right\r\n            this.selectionHandles[4].x = choosen.start_x + choosen.radius - half;\r\n            this.selectionHandles[4].y = choosen.start_y - half;\r\n\r\n            //bottom left, middle, right\r\n            this.selectionHandles[6].x = choosen.start_x - half;\r\n            this.selectionHandles[6].y = choosen.start_y + choosen.radius - half;\r\n\r\n            this.selectionHandles[5].x = choosen.start_x - choosen.radius - half;\r\n            this.selectionHandles[5].y = choosen.start_y + choosen.radius - half;\r\n\r\n            this.selectionHandles[7].x = choosen.start_x + choosen.radius - half;\r\n            this.selectionHandles[7].y = choosen.start_y + choosen.radius - half;\r\n        } else {\r\n            this.selectionHandles[0].x = choosen.start_x - half;\r\n            this.selectionHandles[0].y = choosen.start_y - half;\r\n\r\n            this.selectionHandles[1].x = choosen.end_x - half;\r\n            this.selectionHandles[1].y = choosen.end_y - half;\r\n        }\r\n\r\n\r\n        let anchors = []\r\n        let numberOfAnchors = choosen.end_x ? 2 : 8\r\n        for (let i = 0; i < numberOfAnchors; i++) {\r\n            let ret = this.selectionHandles[i];\r\n            anchors.push({\r\n                start_x: this.selectionHandles[i].x /* - this.main.netPanningX */,\r\n                start_y: this.selectionHandles[i].y /* - this.main.netPanningY */,\r\n                w: this.mySelWidth,\r\n                h: this.mySelWidth,\r\n                color: this.mySelColor,\r\n                stroke: COLORS[this.main.selectedTheme].shapes_stroke\r\n            })\r\n        }\r\n        this.main.tempShape = [...anchors]\r\n    }\r\n\r\n    mousemove(e) {\r\n        this.main.mouse.x = e._x;\r\n        this.main.mouse.y = e._y;\r\n        this.main.mouse.event = e;\r\n\r\n        let mySel = this.main.shapes[this.main.selected]\r\n        let mx = this.main.mouse.x - this.main.netPanningX\r\n        let my = this.main.mouse.y - this.main.netPanningY\r\n\r\n        if (this.isResizeDrag && mySel) {\r\n\r\n            let oldx = mySel.start_x;\r\n            let oldy = mySel.start_y;\r\n\r\n            // 0  1  2\r\n            // 3     4\r\n            // 5  6  7\r\n            if (mySel.w && mySel.h) {\r\n\r\n                switch (this.expectResize) {\r\n                    case 0:\r\n                        mySel.start_x = mx;\r\n                        mySel.start_y = my;\r\n                        mySel.w += oldx - mx;\r\n                        mySel.h += oldy - my;\r\n                        break;\r\n                    case 1:\r\n                        mySel.start_y = my;\r\n                        mySel.h += oldy - my;\r\n                        break;\r\n                    case 2:\r\n                        mySel.start_y = my;\r\n                        mySel.w = mx - oldx;\r\n                        mySel.h += oldy - my;\r\n                        break;\r\n                    case 3:\r\n                        mySel.start_x = mx;\r\n                        mySel.w += oldx - mx;\r\n                        break;\r\n                    case 4:\r\n                        mySel.w = mx - oldx;\r\n                        break;\r\n                    case 5:\r\n                        mySel.start_x = mx;\r\n                        mySel.w += oldx - mx;\r\n                        mySel.h = my - oldy;\r\n                        break;\r\n                    case 6:\r\n                        mySel.h = my - oldy;\r\n                        break;\r\n                    case 7:\r\n                        mySel.w = mx - oldx;\r\n                        mySel.h = my - oldy;\r\n                        break;\r\n                }\r\n            } else if (mySel.radius) {\r\n                // circle resize\r\n                let dx = oldx - mx;\r\n                let dy = oldy - my;\r\n                let dr = Math.sqrt(dx * dx + dy * dy);\r\n                mySel.radius = dr; // updating radius\r\n            } else {\r\n                // edit line\r\n                switch (this.expectResize) {\r\n                    case 0:\r\n                        mySel.start_x = mx;\r\n                        mySel.start_y = my;\r\n                        break;\r\n                    case 1:\r\n                        mySel.end_x = mx;\r\n                        mySel.end_y = my;\r\n                        break;\r\n                }\r\n            }\r\n            this.createBoxes()\r\n        }\r\n\r\n\r\n        if (mySel !== null && !this.isResizeDrag) {\r\n            for (var i = 0; i < 8; i++) {\r\n                // 0  1  2\r\n                // 3     4\r\n                // 5  6  7\r\n\r\n                var cur = this.selectionHandles[i];\r\n\r\n                // we dont need to use the ghost context because\r\n                // selection handles will always be rectangles\r\n                if (mx >= cur.x && mx <= cur.x + this.mySelBoxSize &&\r\n                    my >= cur.y && my <= cur.y + this.mySelBoxSize) {\r\n                    // we found one!\r\n                    this.expectResize = i;\r\n\r\n                    if (!mySel.end_x) {\r\n                        switch (i) {\r\n                            case 0:\r\n                                this.main.canvas.style.cursor = 'nw-resize';\r\n                                break;\r\n                            case 1:\r\n                                this.main.canvas.style.cursor = 'n-resize';\r\n                                break;\r\n                            case 2:\r\n                                this.main.canvas.style.cursor = 'ne-resize';\r\n                                break;\r\n                            case 3:\r\n                                this.main.canvas.style.cursor = 'w-resize';\r\n                                break;\r\n                            case 4:\r\n                                this.main.canvas.style.cursor = 'e-resize';\r\n                                break;\r\n                            case 5:\r\n                                this.main.canvas.style.cursor = 'sw-resize';\r\n                                break;\r\n                            case 6:\r\n                                this.main.canvas.style.cursor = 's-resize';\r\n                                break;\r\n                            case 7:\r\n                                this.main.canvas.style.cursor = 'se-resize';\r\n                                break;\r\n                        }\r\n                    } else {\r\n                        this.main.canvas.style.cursor = 'all-scroll';\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n            // not over a selection box, return to normal\r\n            this.isResizeDrag = false;\r\n            this.expectResize = -1;\r\n            this.main.canvas.style.cursor = 'auto';\r\n        }\r\n    }\r\n\r\n    mousedown(e) {\r\n        // console.log('Command: mousedown', e, this)\r\n        //we are over a selection box\r\n        if (this.expectResize !== -1) {\r\n            this.isResizeDrag = true;\r\n            return;\r\n        }\r\n    }\r\n\r\n    mouseup(event) {\r\n        // console.log('Command: mouseup', event, this)\r\n        this.isResizeDrag = false;\r\n        this.expectResize = -1;\r\n        this.main.canvas.style.cursor = \"none\"\r\n    }\r\n\r\n}","import Command from './command';\r\n\r\nimport { COLORS, TEXT } from '../constants';\r\nimport { trackSelection } from '../utils'\r\n\r\nexport default class TextCommand extends Command {\r\n\r\n    constructor(state) {\r\n        super(state)\r\n        this.started = false;\r\n        this.start = {}\r\n    }\r\n\r\n    mousemove(event) {\r\n        this.main.mouse.x = event._x;\r\n        this.main.mouse.y = event._y;\r\n        this.main.mouse.event = event;\r\n\r\n        if (this.started) {\r\n            this.main.tempShape = [{\r\n                start_x: this.start.x,\r\n                start_y: this.start.y,\r\n                end_x: event._x - this.main.netPanningX,\r\n                end_y: event._y - this.main.netPanningY,\r\n                stroke: COLORS[this.main.selectedTheme].LINES\r\n            }]\r\n        }\r\n    }\r\n\r\n    mousedown(event) {\r\n        this.start.x = event._x - this.main.netPanningX;\r\n        this.start.y = event._y - this.main.netPanningY;\r\n        this.started = true;\r\n    }\r\n\r\n    mouseup(event) {\r\n        if (this.started) {\r\n            this.started = false;\r\n            this.main.tempShape.length = 0;\r\n\r\n            this.main.textModal.open(\r\n                (event._x - this.main.netPanningX),\r\n                (event._y - this.main.netPanningY),\r\n                '',\r\n                (val) => this.saveText(val))\r\n        }\r\n    }\r\n\r\n    saveText(info) {\r\n        let { x, y, val } = info;\r\n        let dashed_line = trackSelection({\r\n            start_x: this.start.x,\r\n            start_y: this.start.y,\r\n            dashed: true,\r\n            arrowStart: true,\r\n            end_x: x - this.main.netPanningX,\r\n            end_y: y - this.main.netPanningY,\r\n            stroke: COLORS[this.main.selectedTheme].LINES\r\n        });\r\n        this.main.shapes.push(dashed_line);\r\n        this.main.shapes.push({\r\n            start_x: (x - this.main.netPanningX) + TEXT.OFFSET,\r\n            start_y: (y - this.main.netPanningY) - TEXT.OFFSET,\r\n            text: val,\r\n            font: TEXT.FONT,\r\n            fill: COLORS[this.main.selectedTheme].shapes_stroke,\r\n            colorKey: dashed_line.colorKey\r\n        });\r\n        this.main.HM.set(this.main.shapes)\r\n    }\r\n\r\n}","import Command from './command';\r\n\r\nimport { COLORS, TEXT } from '../constants';\r\nimport { trackSelection } from '../utils'\r\n\r\nexport default class MeasuresCommand extends Command {\r\n\r\n    constructor(state) {\r\n        super(state)\r\n        this.first = false;\r\n        this.start = {}\r\n        this.d = 0\r\n    }\r\n\r\n    mousemove (event) {\r\n        this.main.mouse.x = event._x;\r\n        this.main.mouse.y = event._y;\r\n        this.main.mouse.event = event;\r\n\r\n        if (this.first) {\r\n            this.main.tempShape = [{\r\n                start_x: this.start.x,\r\n                start_y: this.start.y,\r\n                dashed: true,\r\n                end_x: event._x - this.main.netPanningX,\r\n                end_y: event._y - this.main.netPanningY,\r\n                stroke: COLORS[this.main.selectedTheme].LINES\r\n            }]\r\n\r\n            let dx = this.start.x - (event._x - this.main.netPanningX);\r\n            let dy = this.start.y - (event._y - this.main.netPanningY);\r\n            this.d = Math.floor(Math.sqrt(dx * dx + dy * dy));\r\n            this.main.info = {\r\n                key: 'Dist: ',\r\n                value1: this.d,\r\n                value2: ''\r\n            };\r\n        }\r\n    }\r\n\r\n    mousedown (event) {\r\n        this.start.x = event._x - this.main.netPanningX;\r\n        this.start.y = event._y - this.main.netPanningY;\r\n        this.first = true;\r\n    }\r\n\r\n    mouseup (event) {\r\n        if (this.first) {\r\n            this.first = false;\r\n            this.main.tempShape.length = 0;\r\n            let dashed_line = trackSelection({\r\n                start_x: this.start.x,\r\n                start_y: this.start.y,\r\n                // dashed: true,\r\n                arrowStart: true,\r\n                arrowEnd: true,\r\n                end_x: event._x - this.main.netPanningX,\r\n                end_y: event._y - this.main.netPanningY,\r\n                stroke: COLORS[this.main.selectedTheme].LINES\r\n            });\r\n            this.main.shapes.push(dashed_line);\r\n            var midX = dashed_line.start_x + (dashed_line.end_x - dashed_line.start_x) * 0.50;\r\n            var midY = dashed_line.start_y + (dashed_line.end_y - dashed_line.start_y) * 0.50;\r\n            this.main.shapes.push({\r\n                start_x: (midX - this.main.netPanningX),\r\n                start_y: (midY - this.main.netPanningY),\r\n                measure: this.d,\r\n                font: TEXT.FONT,\r\n                fill: COLORS[this.main.selectedTheme].shapes_stroke,\r\n                colorKey: dashed_line.colorKey\r\n            });\r\n            this.main.HM.set(this.main.shapes)\r\n            this.main.info = {\r\n                key: '',\r\n                value1: '',\r\n                value2: ''\r\n            };\r\n            this.d = 0;\r\n        }\r\n    }\r\n\r\n}","import { COLORS } from \"../constants\";\r\nimport Command from \"./command\";\r\n\r\nexport default class RotateCommand extends Command {\r\n\r\n    constructor(state) {\r\n        super(state)\r\n        this.started = false;\r\n        this.start = {}\r\n    }\r\n\r\n    mousemove(event) {\r\n        this.main.mouse.x = event._x;\r\n        this.main.mouse.y = event._y;\r\n        this.main.mouse.event = event;\r\n\r\n        // draw a line when dragging\r\n        if (this.started && (this.main.selected || this.main.selected === 0)) {\r\n            this.main.tempShape = [{\r\n                start_x: this.start.x,\r\n                start_y: this.start.y,\r\n                dashed: true,\r\n                end_x: event._x - this.main.netPanningX,\r\n                end_y: event._y - this.main.netPanningY,\r\n                stroke: COLORS[this.main.selectedTheme].LINES\r\n            }]\r\n            let dx = (event._x - this.main.netPanningX) - this.start.x;\r\n            let dy = (event._y - this.main.netPanningY) - this.start.y;\r\n            let angle = Math.atan2(dy, dx);\r\n            this.main.info = `Angle: ${Math.floor(angle * 180 / Math.PI)}`;\r\n        }\r\n    }\r\n\r\n    mousedown(event) {// get pixel under cursor\r\n        const pixel = this.main.gctx.getImageData(event._x * this.main.zoomLevel, event._y * this.main.zoomLevel, 1, 1).data;\r\n        // create rgb color for that pixel\r\n        const color = `rgb(${pixel[0]},${pixel[1]},${pixel[2]})`;\r\n        // find a shape with the same colour\r\n\r\n        this.main.shapes.forEach((item, index) => {\r\n            if (item.colorKey === color) {\r\n                item.selected = true;\r\n                this.main.selected = index;\r\n            } else {\r\n                item.selected = false;\r\n            }\r\n        });\r\n        if (this.main.shapes.every(e => e.selected === false)) {\r\n            this.main.selected = null;\r\n        } else {\r\n            this.started = true;\r\n            this.start.x = event._x - this.main.netPanningX;\r\n            this.start.y = event._y - this.main.netPanningY;\r\n        }\r\n    }\r\n\r\n    mouseup(event) {\r\n        if (this.started && (this.main.selected || this.main.selected === 0)) {\r\n            this.started = false;\r\n            this.main.tempShape.length = 0;\r\n            let sel = this.main.shapes[this.main.selected];\r\n            // rect & circle\r\n            if (sel.w || sel.radius) {\r\n                let dx = (event._x - this.main.netPanningX) - sel.start_x;\r\n                let dy = (event._y - this.main.netPanningY) - sel.start_y;\r\n                let angle = Math.atan2(dy, dx);\r\n                // console.log(Math.floor(angle * 180 / Math.PI))\r\n                sel.angle = angle;\r\n                this.main.HM.set(this.main.shapes)\r\n                this.main.info = '';\r\n            }\r\n        }\r\n    }\r\n\r\n}","import '../style.css'\r\n\r\n\r\nimport KeyboardEvents from './keyboards_events';\r\nimport HistoryManagement from './history_management';\r\nimport { colorsTable, interpolate } from './utils';\r\n\r\nimport CommandsPanel from './components/commands-panel'; // web component for the command\r\nimport InputDialogue from './components/input-dialogue';\r\n\r\nimport { UNITS, ANIMATION } from './constants';\r\n\r\nimport { renderPointer, renderCanvas, renderShapes } from './renderFn'\r\n\r\n// Commands\r\nimport PanCommand from './commands/pan';\r\nimport ZoomCommand from './commands/zoom';\r\nimport SelectCommand from './commands/select';\r\nimport DeleteCommand from './commands/delete';\r\nimport LineCommand from './commands/line';\r\nimport RectCommand from './commands/rect';\r\nimport CircleCommand from './commands/circle';\r\nimport MoveCommand from './commands/move';\r\nimport CopyCommand from './commands/copy'\r\nimport ResizeCommand from './commands/resize'\r\nimport TextCommand from './commands/text';\r\nimport MeasuresCommand from './commands/measures';\r\nimport RotateCommand from './commands/rotate';\r\n\r\nwindow.onload = () => {\r\n    const cad = new WebCAD();\r\n    document.getElementById('canvas').replaceWith(cad.canvas);\r\n    cad.start();\r\n    window.cad = cad;   // debug\r\n}\r\n\r\nexport class WebCAD {\r\n\r\n    constructor() {\r\n        this.canvas = document.getElementById(\"canvas\");\r\n        this.ctx = this.canvas.getContext('2d');\r\n\r\n        // ghost canvas for selection\r\n        this.ghostcanvas = document.createElement('canvas');;\r\n        this.gctx = this.ghostcanvas.getContext('2d');\r\n        this.keys = new KeyboardEvents(this);\r\n        this.colorsTable = colorsTable;\r\n        this.selectedTheme = 'grey'; // white, grey, blue\r\n        this.selectedColorInPanel = '#0074D9'\r\n\r\n        this.commands = {\r\n            'SELECT': new SelectCommand(this),\r\n            'DELETE': new DeleteCommand(this),\r\n            'COPY': new CopyCommand(this),\r\n            'MOVE': new MoveCommand(this),\r\n            'RESIZE': new ResizeCommand(this),\r\n            'PAN': new PanCommand(this),\r\n            'ZOOM': new ZoomCommand(this),\r\n            'LINE': new LineCommand(this),\r\n            'RECT': new RectCommand(this),\r\n            'CIRCLE': new CircleCommand(this),\r\n            'TEXT': new TextCommand(this),\r\n            'MEASURES': new MeasuresCommand(this),\r\n            'ROTATE': new RotateCommand(this)\r\n        }\r\n\r\n        this.textModal = new InputDialogue(this)\r\n        this.panel = new CommandsPanel(this);\r\n\r\n        this.mouse = {\r\n            x: 0,\r\n            y: 0,\r\n            event: null\r\n        };\r\n\r\n        this.zoomLevel = 1;\r\n        this.choosenUnitSystem = 'ONE'\r\n        this.info = {\r\n            key: '',\r\n            value1: '',\r\n            value2: ''\r\n        }; // what is shown in cursor...\r\n\r\n        this.shapes = [];\r\n        this.tempShape = []\r\n        this.selected = null;\r\n        this.HM = new HistoryManagement(this);\r\n\r\n        this.lastTime = (new Date()).getTime();\r\n        this.currentTime = 0;\r\n        this.delta = 0;\r\n\r\n        this.startListening()\r\n        this.resizeCanvas()\r\n    }\r\n\r\n    setUnitSystem (what) {\r\n        this.choosenUnitSystem = what\r\n    }\r\n\r\n    getValueAccordingToUnitSystem (val) {\r\n        return val ? val / UNITS[this.choosenUnitSystem] : '';\r\n    }\r\n\r\n    resizeCanvas () {\r\n        this.canvas.width = window.innerWidth;\r\n        this.canvas.height = window.innerHeight;\r\n        this.ghostcanvas.width = window.innerWidth;\r\n        this.ghostcanvas.height = window.innerHeight;\r\n        this.canvas.style.cursor = \"none\"\r\n        this.draw();\r\n    }\r\n\r\n    startListening () {\r\n        // resize the canvas to fill browser window dynamically\r\n        window.addEventListener('resize', this.resizeCanvas.bind(this), false);\r\n        this.canvas.oncontextmenu = () => false;\r\n        this.canvas.addEventListener('click', this.globalHandler.bind(this), false);\r\n        this.canvas.addEventListener('mousemove', this.globalHandler.bind(this), false);\r\n        this.canvas.addEventListener('mousedown', this.globalHandler.bind(this), false);\r\n        this.canvas.addEventListener('mouseup', this.globalHandler.bind(this), false);\r\n        this.canvas.addEventListener('mouseout', this.globalHandler.bind(this), false);\r\n    }\r\n\r\n    globalHandler (ev) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let x = parseInt(ev.clientX / this.zoomLevel);\r\n        let y = parseInt(ev.clientY / this.zoomLevel);\r\n\r\n        /* ----------------- SNAP 2 GRID ----------------- */\r\n        if (this.keys.hasSnap && !(this.keys.choosenCommand === 'DELETE' || this.keys.choosenCommand === 'SELECT')) {\r\n            let restoH = x % this.keys.currentSnap;\r\n            if (restoH >= this.keys.currentSnap) {\r\n                x = x - restoH + this.keys.currentSnap\r\n            } else {\r\n                x -= restoH;\r\n            }\r\n            let restoV = y % this.keys.currentSnap;\r\n            if (restoV >= this.keys.currentSnap) {\r\n                y = y - restoV + this.keys.currentSnap\r\n            } else {\r\n                y -= restoV;\r\n            }\r\n        }\r\n        ev._x = x;\r\n        ev._y = y;\r\n\r\n        this.currentCommand = this.commands[this.keys.choosenCommand]\r\n        var func = this.currentCommand[ev.type].bind(this.currentCommand);\r\n        if (func) {\r\n            func(ev);\r\n        }\r\n    }\r\n\r\n    loop () {\r\n        // time management for animation\r\n        this.currentTime = (new Date()).getTime();\r\n        this.dt = (this.currentTime - this.lastTime) / 1000;\r\n\r\n        this.update(this.dt)\r\n\r\n        this.draw();\r\n\r\n        this.lastTime = this.currentTime;\r\n\r\n        requestAnimationFrame(() => {\r\n            this.loop()\r\n        });\r\n    }\r\n\r\n    start () {\r\n        this.loop();\r\n    }\r\n\r\n    unselectAll () {\r\n        this.shapes.forEach((item, index) => {\r\n            item.selected = false;\r\n        });\r\n        this.selected = null;\r\n    }\r\n\r\n    update (dt) {\r\n        // console.log(dt)\r\n        this.HM.value.forEach(item => {\r\n            // ANIMATION on COPY / MOVE\r\n            if (item.animationEdit) {\r\n                if (item.counterEdit <= ANIMATION.TIME) {\r\n                    item.counterEdit += ANIMATION.STEP\r\n                    let { x, y } = interpolate({ x: item.start_x, y: item.start_y }, { x: item.new_start_x, y: item.new_start_y }, item.counterEdit / ANIMATION.TIME);\r\n                    item.start_x = x;\r\n                    item.start_y = y;\r\n                } else {\r\n                    item.animationEdit = false;\r\n                    this.unselectAll();\r\n                }\r\n            }\r\n            // Animation on shape creation\r\n            if (item.animationCreate) {\r\n                if (item.counterCreate <= ANIMATION.TIME) {\r\n                    item.counterCreate += ANIMATION.STEP\r\n                    // RECT\r\n                    if (item.final_w) {\r\n                        let { x, y } = interpolate({ x: item.w, y: item.h }, { x: item.final_w, y: item.final_h }, item.counterCreate / ANIMATION.TIME);\r\n                        item.w = x;\r\n                        item.h = y;\r\n                    }\r\n                    // LINE\r\n                    if (item.final_end_x) {\r\n                        let { x, y } = interpolate({ x: item.end_x, y: item.end_y }, { x: item.final_end_x, y: item.final_end_y }, item.counterCreate / ANIMATION.TIME);\r\n                        item.end_x = x;\r\n                        item.end_y = y;\r\n                    }\r\n                    // CIRCLE\r\n                    if (item.final_radius) {\r\n                        let { x } = interpolate({ x: item.radius, y: 0 }, { x: item.final_radius, y: 0 }, item.counterCreate / ANIMATION.TIME);\r\n                        item.radius = x;\r\n                    }\r\n                } else {\r\n                    item.animationCreate = false;\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    draw () {\r\n        // CANCAS\r\n        this.ctx.fillStyle = \"black\";\r\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n        this.ctx.save();\r\n        this.ctx.scale(this.zoomLevel, this.zoomLevel); // apply scale\r\n        this.ctx.translate(this.netPanningX, this.netPanningY); // apply translation\r\n        renderCanvas(this);\r\n        renderShapes(this, this.ctx, false);\r\n        renderPointer(this);\r\n        this.ctx.restore();\r\n\r\n        // GHOST CANVAS for HIT Detection\r\n        this.gctx.fillStyle = \"black\";\r\n        this.gctx.fillRect(0, 0, this.ghostcanvas.width, this.ghostcanvas.height);\r\n        this.gctx.save();\r\n        this.gctx.scale(this.zoomLevel, this.zoomLevel); // apply scale\r\n        this.gctx.translate(this.netPanningX, this.netPanningY); // apply translation\r\n        renderShapes(this, this.gctx, true);\r\n        this.gctx.restore();\r\n    }\r\n}\r\n\r\n\r\n\r\n"]}